<!--
    *****************************************************************************
    **
    ** Copyright (C) 2022 The Qt Company Ltd.
    ** Contact: https://www.qt.io/licensing/
    **
    ** This file is part of the Qt VS Tools.
    **
    ** $QT_BEGIN_LICENSE:GPL-EXCEPT$
    ** Commercial License Usage
    ** Licensees holding valid commercial Qt licenses may use this file in
    ** accordance with the commercial license agreement provided with the
    ** Software or, alternatively, in accordance with the terms contained in
    ** a written agreement between you and The Qt Company. For licensing terms
    ** and conditions see https://www.qt.io/terms-conditions. For further
    ** information use the contact form at https://www.qt.io/contact-us.
    **
    ** GNU General Public License Usage
    ** Alternatively, this file may be used under the terms of the GNU
    ** General Public License version 3 as published by the Free Software
    ** Foundation with exceptions as appearing in the file LICENSE.GPL3-EXCEPT
    ** included in the packaging of this file. Please review the following
    ** information to ensure the GNU General Public License requirements will
    ** be met: https://www.gnu.org/licenses/gpl-3.0.html.
    **
    ** $QT_END_LICENSE$
    **
    *****************************************************************************
-->

<wizards:WizardPage x:Class="QtVsTools.Wizards.ProjectWizard.GuiPage"
                  xmlns:wizards="clr-namespace:QtVsTools.Wizards"
                  xmlns:util="clr-namespace:QtVsTools.Wizards.Util"
                  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                  xmlns:local="clr-namespace:QtVsTools.Wizards.ClassWizard"
                  KeepAlive="True"
                  mc:Ignorable="d"
                  d:DesignHeight="445"
                  d:DesignWidth="585">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="100" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Image Grid.Column="0"
               HorizontalAlignment="Center"
               Source="/QtVsTools.Wizards;component/Resources/Qt-logo-small.png"
               VerticalAlignment="Top"
               Margin="0,25,0,0"
               RenderTransformOrigin="1,0">
            <Image.RenderTransform>
                <TransformGroup>
                    <ScaleTransform ScaleY="0.86"
                                    ScaleX="0.86" />
                </TransformGroup>
            </Image.RenderTransform>
        </Image>
        <Grid Grid.Column="1"
              Margin="25,25,10,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <TextBlock TextWrapping="Wrap"
                       Grid.Row="0">
                <Run FontWeight="Bold"
                     Text="{Binding Path=Header}" />
                <LineBreak />
                <LineBreak />
                <Run Text="{Binding Path=Message}" />
                <LineBreak />
            </TextBlock>
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.Resources>
                    <Style TargetType="{x:Type TextBox}">
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError"
                                     Value="true">
                                <Setter Property="ToolTip"
                                        Value="{Binding RelativeSource={RelativeSource Self},
                                         Path=(Validation.Errors)[0].ErrorContent}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Resources>
                <StackPanel Grid.Column="0">
                    <TextBlock Text="Class Name:"
                               Margin="0,0,10,0" />
                    <TextBox Margin="0,0,10,15"
                             Name="ClassName"
                             TextChanged="OnClassNameChanged"
                             TabIndex="0">
                        <TextBox.Text>
                            <Binding Path="Data.ClassName"
                                     NotifyOnValidationError="True"
                                     UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <util:ClassNameValidationRule />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                    <TextBlock Text="Header (.h) file:"
                               Margin="0,14,10,5" />
                    <TextBox Name="ClassHeaderFile"
                             Margin="0,0,10,10"
                             TabIndex="2">
                        <TextBox.Text>
                            <Binding Path="Data.ClassHeaderFile"
                                     NotifyOnValidationError="True"
                                     UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <util:FileNameValidationRule FileExt=".h" />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                    <TextBlock Text="User Interface (.ui) file:"
                               Margin="0,0,10,5" />
                    <TextBox Name="UiFile"
                             Margin="0,0,10,10"
                             TabIndex="4">
                        <TextBox.Text>
                            <Binding Path="Data.UiFile"
                                     NotifyOnValidationError="True"
                                     UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <util:FileNameValidationRule FileExt=".ui" />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                    <TextBlock Grid.Column="1"
                           TextWrapping="Wrap"
                           Text="Ui Class Inclusion as:"
                           Margin="0,10,0,5"
                           VerticalAlignment="Top"/>
                    <StackPanel Grid.Column="1"
                            Margin="10,0,0,20">
                        <StackPanel.Resources>
                            <util:UiClassInclusionConverter x:Key="UiClassInclusionConverter" />
                        </StackPanel.Resources>
                        <RadioButton x:Name="Member"
                                 Content="Member"
                                 Margin="0,0,0,5"
                                 IsChecked="{
                                    Binding Path=Data.UiClassInclusion,
                                    Converter={StaticResource UiClassInclusionConverter},
                                    ConverterParameter={x:Static local:UiClassInclusion.Member}
                                 }"
                                 TabIndex="6" />
                        <RadioButton x:Name="MemberPointer"
                                 Content="Member Pointer"
                                 Margin="0,0,0,5"
                                 IsChecked="{
                                    Binding Path=Data.UiClassInclusion,
                                    Converter={StaticResource UiClassInclusionConverter},
                                    ConverterParameter={x:Static local:UiClassInclusion.MemberPointer}
                                 }"
                                 TabIndex="7" />
                        <RadioButton x:Name="MultipleInheritance"
                                 Content="Multiple Inheritance"
                                 IsChecked="{
                                    Binding Path=Data.UiClassInclusion,
                                    Converter={StaticResource UiClassInclusionConverter},
                                    ConverterParameter={x:Static local:UiClassInclusion.MultipleInheritance}
                                 }"
                                 TabIndex="8" />
                    </StackPanel>
                </StackPanel>
                <StackPanel Grid.Column="1">
                    <TextBlock Text="Base class:" />
                    <ComboBox Margin="0,0,0,15"
                              IsReadOnly="True"
                              SelectedIndex="0"
                              Text="{Binding Path=Data.BaseClass}"
                              IsSynchronizedWithCurrentItem="True"
                              TabIndex="1">
                        <ComboBoxItem Content="QMainWindow"
                                      IsSelected="True" />
                        <ComboBoxItem Content="QWidget" />
                        <ComboBoxItem Content="QDialog" />
                    </ComboBox>
                    <TextBlock Text="Source (.cpp) file:"
                               Margin="0,10,0,5" />
                    <TextBox Name="ClassSourceFile"
                             Margin="0,0,0,10"
                             TabIndex="3">
                        <TextBox.Text>
                            <Binding Path="Data.ClassSourceFile"
                                     NotifyOnValidationError="True"
                                     UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <util:FileNameValidationRule FileExt=".cpp" />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                    <TextBlock Margin="0,0,0,5"
                               Text="Resource (.qrc) file:" />
                    <TextBox Name="QrcFile"
                             Margin="0,0,0,10"
                             TabIndex="5">
                        <TextBox.Text>
                            <Binding Path="Data.QrcFile"
                                     NotifyOnValidationError="True"
                                     UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <util:FileNameValidationRule FileExt=".qrc" />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                    <CheckBox Content="Lower case file names"
                              Margin="0,10,0,5"
                              Name="LowerCaseFileNames"
                              TabIndex="9"
                              Click="OnLowerCaseFileNamesClick" />
                    <CheckBox Content="Precompiled header"
                              Margin="0,20,0,5"
                              IsChecked="{Binding Path=Data.UsePrecompiledHeader}"
                              TabIndex="10" />
                    <CheckBox Content="Add default application icon"
                              Margin="0,0,0,5"
                              IsChecked="{Binding Path=Data.AddDefaultAppIcon}"
                              TabIndex="11" />
                </StackPanel>
            </Grid>
            <StackPanel HorizontalAlignment="Right"
                        Orientation="Horizontal"
                        Grid.Row="2"
                        Margin="0,0,0,10">
                <Button Click="OnPreviousButtonClick"
                        Name="PreviousButton"
                        IsEnabled="{Binding Path=PreviousButtonEnabled}"
                        MinWidth="75">&lt; _Previous</Button>
                <Button MinWidth="75"
                        Name="NextButton"
                        Click="OnNextButtonClick"
                        IsEnabled="{Binding Path=NextButtonEnabled}"
                        Margin="10,0,0,0">_Next &gt;</Button>
                <Button MinWidth="75"
                        Click="OnFinishButtonClick"
                        Margin="10,0,0,0"
                        IsDefault="True"
                        Name="FinishButton"
                        Content="_Finish"
                        VerticalAlignment="Bottom">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="IsEnabled"
                                    Value="false" />
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=FinishButtonEnabled}"
                                                   Value="true" />
                                        <Condition Binding="{Binding ElementName=ClassName,
                                            Path=(Validation.HasError)}"
                                                   Value="false" />
                                        <Condition Binding="{Binding ElementName=ClassHeaderFile,
                                            Path=(Validation.HasError)}"
                                                   Value="false" />
                                        <Condition Binding="{Binding ElementName=ClassSourceFile,
                                            Path=(Validation.HasError)}"
                                                   Value="false" />
                                        <Condition Binding="{Binding ElementName=UiFile,
                                            Path=(Validation.HasError)}"
                                                   Value="false" />
                                        <Condition Binding="{Binding ElementName=QrcFile,
                                            Path=(Validation.HasError)}"
                                                   Value="false" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled"
                                            Value="true" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button Click="OnCancelButtonClick"
                        MinWidth="75"
                        Margin="10,0,0,0"
                        Name="CancelButton"
                        IsEnabled="{Binding Path=CancelButtonEnabled}"
                        IsCancel="True">_Cancel</Button>
            </StackPanel>
        </Grid>
    </Grid>
</wizards:WizardPage>
