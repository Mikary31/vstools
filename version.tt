<#@include file="common.tt" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Xml" #>
<#@ assembly name="System.Xml.Linq" #>
<#@ assembly name="System.Linq" #>
<#@ assembly name="System.Data.Linq" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Xml" #>
<#@ import namespace="System.Xml.Linq" #>
<#
/****************************************************************************
**
** Copyright (C) 2018 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the Qt VS Tools.
**
** $QT_BEGIN_LICENSE:GPL-EXCEPT$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU General Public License Usage
** Alternatively, this file may be used under the terms of the GNU
** General Public License version 3 as published by the Free Software
** Foundation with exceptions as appearing in the file LICENSE.GPL3-EXCEPT
** included in the packaging of this file. Please review the following
** information to ensure the GNU General Public License requirements will
** be met: https://www.gnu.org/licenses/gpl-3.0.html.
**
** $QT_END_LICENSE$
**
****************************************************************************/

    Func<string> GetRevisionData = new Func<string>(() =>
    {
        var proc = System.Diagnostics.Process.Start(new ProcessStartInfo
        {
            FileName = "git",
            Arguments = "describe --tags",
            WorkingDirectory = Directory.GetParent(SolutionDir).FullName,
            CreateNoWindow = true, UseShellExecute = false,
            RedirectStandardOutput = true, RedirectStandardError = true,
        });
        return proc.WaitForExit(3000) && proc.ExitCode == 0 ? proc.StandardOutput.ReadLine() : "";
    });
    string REVISION_TAG = GetRevisionData();
    int REVISION_NUMBER = Convert.ToInt32(REVISION_TAG.Split('-').Skip(1).FirstOrDefault());

/***************************************************************************/

    string QT_VS_TOOLS_VERSION = (string)XDocument.Load(SolutionDir + @"\version.targets")
        .Descendants()
        .Where(x => x.Name.LocalName == "QtVSToolsVersion")
        .FirstOrDefault();

/***************************************************************************/

    string QT_VS_TOOLS_VERSION_TAG
        = QT_VS_TOOLS_VERSION.Replace(".", "");

    string QT_VS_TOOLS_VERSION_ASSEMBLY
        = string.Format("{0}.{1}", QT_VS_TOOLS_VERSION, REVISION_NUMBER);

    string QT_VS_TOOLS_VERSION_ASSEMBLY_FILE
        = string.Format("{0}.{1}", QT_VS_TOOLS_VERSION, REVISION_NUMBER);

    string QT_VS_TOOLS_VERSION_USER
        = REVISION_NUMBER > 0
            ? string.Format("{0} (rev.{1})", QT_VS_TOOLS_VERSION, REVISION_NUMBER)
            : QT_VS_TOOLS_VERSION;

    string QT_VS_TOOLS_VERSION_MANIFEST
        = REVISION_NUMBER > 0 ? QT_VS_TOOLS_VERSION_ASSEMBLY : QT_VS_TOOLS_VERSION;
#>